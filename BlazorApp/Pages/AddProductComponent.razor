@page "/addproduct"
@attribute [Authorize(Policy ="AdminOnly")]

@inject NavigationManager NavigationManager
@inject IAddProductUseCase AddProductUseCase
@inject IGetCategoryByIdUseCase GetCategoryByIdUseCase
@inject IViewCategoriesUseCase ViewCategoriesUseCase

<h3>Add Product</h3>
<br>
@if(product!=null)
    {
      <EditForm Model="product"  OnValidSubmit="OnValidSubmit">
          <DataAnnotationsValidator></DataAnnotationsValidator>
          <ValidationSummary></ValidationSummary>


          <div class="form-group">
              <lable for="name">Name</lable>
              <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
          </div>

             <div class="form-group">
              <lable for="category">Category</lable>
              <select id="category" @bind="product.CategoryId" class="form-control">
                <option  selected></option>   
                  @foreach(var cat in Category)
                {
                     <option value="@cat.CategoryId">@cat.Name</option> 
                }
              
              </select>
          </div>

           <div class="form-group">
              <lable for="quantity">Quantity</lable>
              <InputNumber id="quantity" @bind-Value="product.Quantity" class="form-control"></InputNumber>
          </div>

           <div class="form-group">
              <lable for="price">Price</lable>
              <InputNumber id="price" @bind-Value="product.Price"  @bind-Value:format="F2" class="form-control"></InputNumber>
          </div>

          <button type="submit" class="btn btn-primary">Save</button>
             <button type="submit" class="btn btn-primary" @onclick="OnCancel">Cansel</button>
      </EditForm>  
    }



@code {

    private Product product { get; set; }
    private List<Category> Category { get; set; }



    protected override void OnInitialized()
    {
        base.OnInitialized();
        product = new Product();
        Category = ViewCategoriesUseCase.Execute().ToList() ;
    }
    public void OnValidSubmit()
    {
        AddProductUseCase.Execute(product);
        NavigationManager.NavigateTo("/products");

    }
    public void  OnCancel()
    {
        NavigationManager.NavigateTo("/products");
    }
}

